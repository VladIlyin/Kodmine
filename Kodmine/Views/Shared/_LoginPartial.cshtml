@using Microsoft.AspNetCore.Identity
@using Kodmine.DAL
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@*@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager*@


@if ((await AuthorizationService.AuthorizeAsync(User, "PostPolicy")).Succeeded)
{
    <li class="nav-item"><a class="nav-link" href="/admin">Админка</a></li>
}

@*@if (SignInManager.IsSignedIn(User))
    {
        <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
            <ul class="nav navbar-nav navbar-right">
                <li>
                    @*<a asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>*@
@*Hello, @UserManager.GetUserName(User)!
    </li>
    <li>
        <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
    </li>
    </ul>
    </form>
    }
    else
    {
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
    }*@
